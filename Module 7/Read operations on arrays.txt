Please enter a MongoDB connection string (Default: mongodb://localhost/):

Current Mongosh Log ID: 67909955d6df8a4e9c3d9050
Connecting to:          mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.1.1
Using MongoDB:          7.0.4
Using Mongosh:          2.1.1
mongosh 2.3.8 is available for download: https://www.mongodb.com/try/download/shell

For mongosh info see: https://docs.mongodb.com/mongodb-shell/

------
   The server generated these startup warnings when booting
   2025-01-21T12:38:39.330+05:30: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
------

test> show dbs
admin            40.00 KiB
blog            112.00 KiB
boxOffice        40.00 KiB
carData          80.00 KiB
cityData         80.00 KiB
companyData      72.00 KiB
config          108.00 KiB
contactData     144.00 KiB
finnancialData   40.00 KiB
flights         116.00 KiB
hospital         88.00 KiB
local            72.00 KiB
movieData       192.00 KiB
patients         72.00 KiB
shop            128.00 KiB
support          88.00 KiB
test             12.00 KiB
user             72.00 KiB
test> use user
switched to db user
user> db.users.find()
[
  {
    _id: ObjectId('67908caf7c59ff91a9587f4a'),
    name: 'Max',
    hobbies: [
      { title: 'Sports', frequency: 3 },
      { title: 'Cooking', frequency: 6 }
    ],
    phone: 123456789
  },
  {
    _id: ObjectId('67908caf7c59ff91a9587f4b'),
    name: 'Manuel',
    hobbies: [
      { title: 'Cooking', frequency: 5 },
      { title: 'Cars', frequency: 2 }
    ],
    phone: '0123456852',
    age: 30
  },
  {
    _id: ObjectId('67908db27c59ff91a9587f4c'),
    name: 'Anna',
    hobbies: [
      { title: 'Sports', frequency: 2 },
      { title: 'Yoga', frequency: 3 }
    ],
    phone: 123456789,
    age: null
  }
]
user> db.users.insertOne({name: "Chris", hobbies: ["Sports","Cooking","Yoga"]})
{
  acknowledged: true,
  insertedId: ObjectId('67909a7bd6df8a4e9c3d9051')
}
user> db.users.find({hobbies: {$size: 3}})
[
  {
    _id: ObjectId('67909a7bd6df8a4e9c3d9051'),
    name: 'Chris',
    hobbies: [ 'Sports', 'Cooking', 'Yoga' ]
  }
]
user> use boxOffice
switched to db boxOffice
boxOffice> show collections
movieStarts
boxOffice> db.movieStarts.find({genre: ["action","thriller"]})
[
  {
    _id: ObjectId('679096302cc5330aabf9f002'),
    title: 'Teach me if you can',
    meta: { rating: 8.5, aired: 2014, runtime: 90 },
    visitors: 590378,
    expectedVisitors: 500000,
    genre: [ 'action', 'thriller' ]
  }
]
boxOffice> db.movieStarts.find({genre: {$all: ["action","thriller"]}})
[
  {
    _id: ObjectId('679096302cc5330aabf9f001'),
    title: 'Supercharged Teaching',
    meta: { rating: 9.3, aired: 2016, runtime: 60 },
    visitors: 370000,
    expectedVisitors: 1000000,
    genre: [ 'thriller', 'action' ]
  },
  {
    _id: ObjectId('679096302cc5330aabf9f002'),
    title: 'Teach me if you can',
    meta: { rating: 8.5, aired: 2014, runtime: 90 },
    visitors: 590378,
    expectedVisitors: 500000,
    genre: [ 'action', 'thriller' ]
  },
  {
    _id: ObjectId('679096302cc5330aabf9f003'),
    title: 'The Last Student Returns',
    meta: { rating: 9.5, aired: 2018, runtime: 100 },
    visitors: 1300000,
    expectedVisitors: 1550000,
    genre: [ 'thriller', 'drama', 'action' ]
  }
]
boxOffice> use user
switched to db user
user> user.users.find({$and: [{"hobbies.title": "Sports"},{"hobbies.frequency": {$gte: 3}}]})
ReferenceError: user is not defined
user> db.users.find({$and: [{"hobbies.title": "Sports"},{"hobbies.frequency": {$gte: 3}}]})
[
  {
    _id: ObjectId('67908caf7c59ff91a9587f4a'),
    name: 'Max',
    hobbies: [
      { title: 'Sports', frequency: 3 },
      { title: 'Cooking', frequency: 6 }
    ],
    phone: 123456789
  },
  {
    _id: ObjectId('67908db27c59ff91a9587f4c'),
    name: 'Anna',
    hobbies: [
      { title: 'Sports', frequency: 2 },
      { title: 'Yoga', frequency: 3 }
    ],
    phone: 123456789,
    age: null
  }
]
user> db.users.find({hobbies: {$elemMatch: {title: "Sports", frequency: {$gte: 3}}}})
[
  {
    _id: ObjectId('67908caf7c59ff91a9587f4a'),
    name: 'Max',
    hobbies: [
      { title: 'Sports', frequency: 3 },
      { title: 'Cooking', frequency: 6 }
    ],
    phone: 123456789
  }
]
user>