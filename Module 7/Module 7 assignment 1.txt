Please enter a MongoDB connection string (Default: mongodb://localhost/):

Current Mongosh Log ID: 679094e9e96dac2e77550acc
Connecting to:          mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.1.1
Using MongoDB:          7.0.4
Using Mongosh:          2.1.1
mongosh 2.3.8 is available for download: https://www.mongodb.com/try/download/shell

For mongosh info see: https://docs.mongodb.com/mongodb-shell/

------
   The server generated these startup warnings when booting
   2025-01-21T12:38:39.330+05:30: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
------

test> use boxOffice
switched to db boxOffice
boxOffice> help

  Shell Help:

    use                                        Set current database
    show                                       'show databases'/'show dbs': Print a list of all available databases.
                                               'show collections'/'show tables': Print a list of all collections for current database.
                                               'show profile': Prints system.profile information.
                                               'show users': Print a list of all users for current database.
                                               'show roles': Print a list of all roles for current database.
                                               'show log <type>': log for current connection, if type is not set uses 'global'
                                               'show logs': Print all logs.

    exit                                       Quit the MongoDB shell with exit/exit()/.exit
    quit                                       Quit the MongoDB shell with quit/quit()
    Mongo                                      Create a new connection and return the Mongo object. Usage: new Mongo(URI, options [optional])
    connect                                    Create a new connection and return the Database object. Usage: connect(URI, username [optional], password [optional])
    it                                         result of the last line evaluated; use to further iterate
    version                                    Shell version
    load                                       Loads and runs a JavaScript file into the current shell environment
    enableTelemetry                            Enables collection of anonymous usage data to improve the mongosh CLI
    disableTelemetry                           Disables collection of anonymous usage data to improve the mongosh CLI
    passwordPrompt                             Prompts the user for a password
    sleep                                      Sleep for the specified number of milliseconds
    print                                      Prints the contents of an object to the output
    printjson                                  Alias for print()
    convertShardKeyToHashed                    Returns the hashed value for the input using the same hashing function as a hashed index.
    cls                                        Clears the screen like console.clear()
    isInteractive                              Returns whether the shell will enter or has entered interactive mode

  For more information on usage: https://docs.mongodb.com/manual/reference/method
boxOffice>

boxOffice> use test
switched to db test
test> show dbs
admin            40.00 KiB
blog            112.00 KiB
boxOffice        40.00 KiB
carData          80.00 KiB
cityData         80.00 KiB
companyData      72.00 KiB
config          108.00 KiB
contactData     144.00 KiB
finnancialData   40.00 KiB
flights         116.00 KiB
hospital         88.00 KiB
local            72.00 KiB
movieData       192.00 KiB
patients         72.00 KiB
shop            128.00 KiB
support          88.00 KiB
test             12.00 KiB
user             72.00 KiB
test> use boxOffice
switched to db boxOffice
boxOffice> db.
db.__proto__                  db.constructor                db.hasOwnProperty             db.isPrototypeOf
db.propertyIsEnumerable       db.toLocaleString             db.toString                   db.valueOf
db.getMongo                   db.getName                    db.getCollectionNames         db.getCollectionInfos
db.runCommand                 db.adminCommand               db.aggregate                  db.getSiblingDB
db.getCollection              db.dropDatabase               db.createUser                 db.updateUser
db.changeUserPassword         db.logout                     db.dropUser                   db.dropAllUsers
db.auth                       db.grantRolesToUser           db.revokeRolesFromUser        db.getUser
db.getUsers                   db.createCollection           db.createEncryptedCollection  db.createView
db.createRole                 db.updateRole                 db.dropRole                   db.dropAllRoles
db.grantRolesToRole           db.revokeRolesFromRole        db.grantPrivilegesToRole      db.revokePrivilegesFromRole
db.getRole                    db.getRoles                   db.currentOp                  db.killOp
db.shutdownServer             db.fsyncLock                  db.fsyncUnlock                db.version
db.serverBits                 db.isMaster                   db.hello                      db.serverBuildInfo
db.serverStatus               db.stats                      db.hostInfo                   db.serverCmdLineOpts
db.rotateCertificates         db.printCollectionStats       db.getProfilingStatus         db.setProfilingLevel
db.setLogLevel                db.getLogComponents           db.commandHelp                db.listCommands
db.sql                        db.movieStarts

boxOffice> db.movieStarts.find()
[
  {
    _id: ObjectId('679096302cc5330aabf9f001'),
    title: 'Supercharged Teaching',
    meta: { rating: 9.3, aired: 2016, runtime: 60 },
    visitors: 370000,
    expectedVisitors: 1000000,
    genre: [ 'thriller', 'action' ]
  },
  {
    _id: ObjectId('679096302cc5330aabf9f002'),
    title: 'Teach me if you can',
    meta: { rating: 8.5, aired: 2014, runtime: 90 },
    visitors: 590378,
    expectedVisitors: 500000,
    genre: [ 'action', 'thriller' ]
  },
  {
    _id: ObjectId('679096302cc5330aabf9f003'),
    title: 'The Last Student Returns',
    meta: { rating: 9.5, aired: 2018, runtime: 100 },
    visitors: 1300000,
    expectedVisitors: 1550000,
    genre: [ 'thriller', 'drama', 'action' ]
  }
]
boxOffice> db.movieStarts.find({$and: ["meta.rating": {$gt: 9.2}, runtime: {$lt: 100}]})
Uncaught:
SyntaxError: Unexpected token, expected "," (1:41)

> 1 | db.movieStarts.find({$and: ["meta.rating": {$gt: 9.2}, runtime: {$lt: 100}]})
    |                                          ^
  2 |

boxOffice> db.movieStarts.find({$and: [{"meta.rating": {$gt: 9.2}}, {runtime: {$lt: 100}}]})

boxOffice> db.movieStarts.find({$and: [{"meta.rating": {$gt: 9.2}}, {"meta.runtime": {$lt: 100}}]})
[
  {
    _id: ObjectId('679096302cc5330aabf9f001'),
    title: 'Supercharged Teaching',
    meta: { rating: 9.3, aired: 2016, runtime: 60 },
    visitors: 370000,
    expectedVisitors: 1000000,
    genre: [ 'thriller', 'action' ]
  }
]
boxOffice> db.movieStarts.find({$or: [{genre: "drama"},{genre: "action"}]})
[
  {
    _id: ObjectId('679096302cc5330aabf9f001'),
    title: 'Supercharged Teaching',
    meta: { rating: 9.3, aired: 2016, runtime: 60 },
    visitors: 370000,
    expectedVisitors: 1000000,
    genre: [ 'thriller', 'action' ]
  },
  {
    _id: ObjectId('679096302cc5330aabf9f002'),
    title: 'Teach me if you can',
    meta: { rating: 8.5, aired: 2014, runtime: 90 },
    visitors: 590378,
    expectedVisitors: 500000,
    genre: [ 'action', 'thriller' ]
  },
  {
    _id: ObjectId('679096302cc5330aabf9f003'),
    title: 'The Last Student Returns',
    meta: { rating: 9.5, aired: 2018, runtime: 100 },
    visitors: 1300000,
    expectedVisitors: 1550000,
    genre: [ 'thriller', 'drama', 'action' ]
  }
]
boxOffice> db.movieStarts.find({$and: [{genre: "drama"},{genre: "action"}]})
[
  {
    _id: ObjectId('679096302cc5330aabf9f003'),
    title: 'The Last Student Returns',
    meta: { rating: 9.5, aired: 2018, runtime: 100 },
    visitors: 1300000,
    expectedVisitors: 1550000,
    genre: [ 'thriller', 'drama', 'action' ]
  }
]
boxOffice> db.movieStarts.find({$expr: {$gt: ["$visitors","expectedVisitors"]}})

boxOffice> db.movieStarts.find({$expr: {$gt: ["$visitors","$expectedVisitors"]}})
[
  {
    _id: ObjectId('679096302cc5330aabf9f002'),
    title: 'Teach me if you can',
    meta: { rating: 8.5, aired: 2014, runtime: 90 },
    visitors: 590378,
    expectedVisitors: 500000,
    genre: [ 'action', 'thriller' ]
  }
]
boxOffice>