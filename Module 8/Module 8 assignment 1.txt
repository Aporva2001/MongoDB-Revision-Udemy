Please enter a MongoDB connection string (Default: mongodb://localhost/):

Current Mongosh Log ID: 6791decbbcd3aa5a428c3c85
Connecting to:          mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.1.1
Using MongoDB:          7.0.4
Using Mongosh:          2.1.1
mongosh 2.3.8 is available for download: https://www.mongodb.com/try/download/shell

For mongosh info see: https://docs.mongodb.com/mongodb-shell/

------
   The server generated these startup warnings when booting
   2025-01-21T12:38:39.330+05:30: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
------

test> use users
switched to db users
users> show bds
MongoshInvalidInputError: [COMMON-10001] 'bds' is not a valid argument for "show".
users> show dbs
admin            40.00 KiB
blog            112.00 KiB
boxOffice        80.00 KiB
carData          80.00 KiB
cityData         80.00 KiB
companyData      72.00 KiB
config          108.00 KiB
contactData     144.00 KiB
finnancialData   40.00 KiB
flights         116.00 KiB
hospital         88.00 KiB
local            72.00 KiB
movieData       192.00 KiB
patients         72.00 KiB
shop            128.00 KiB
support          88.00 KiB
test             12.00 KiB
user             72.00 KiB
users> use SportData
switched to db SportData
SportData> db.sports.updateMany({title: "Cricket"},$set: {requiresTeam: true}, {upsert: true})
Uncaught:
SyntaxError: Unexpected token, expected "," (1:44)

> 1 | db.sports.updateMany({title: "Cricket"},$set: {requiresTeam: true}, {upsert: true})
    |                                             ^
  2 |

SportData> db.sports.updateMany({title: "Cricket"},{$set: {requiresTeam: true}}, {upsert: true})
{
  acknowledged: true,
  insertedId: ObjectId('6791dfb9093aff50e6c5fe5e'),
  matchedCount: 0,
  modifiedCount: 0,
  upsertedCount: 1
}
SportData> db.sports.updateMany({title: "BasketBall"},{$set: {requiresTeam: false}},{upsert: true})
{
  acknowledged: true,
  insertedId: ObjectId('6791e008093aff50e6c5fe70'),
  matchedCount: 0,
  modifiedCount: 0,
  upsertedCount: 1
}
SportData> db.sports.find()
[
  {
    _id: ObjectId('6791dfb9093aff50e6c5fe5e'),
    title: 'Cricket',
    requiresTeam: true
  },
  {
    _id: ObjectId('6791e008093aff50e6c5fe70'),
    title: 'BasketBall',
    requiresTeam: false
  }
]
SportData> db.sports.updateMany({requiresTeam: true},{$min: {playersRequired: 5}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
SportData> db.sports.find()
[
  {
    _id: ObjectId('6791dfb9093aff50e6c5fe5e'),
    title: 'Cricket',
    requiresTeam: true,
    playersRequired: 5
  },
  {
    _id: ObjectId('6791e008093aff50e6c5fe70'),
    title: 'BasketBall',
    requiresTeam: false
  }
]
SportData> db.sports.updateMany({requiresTeam: true}, {$inc: {playersRequired: 10}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
SportData> db.sports.find()
[
  {
    _id: ObjectId('6791dfb9093aff50e6c5fe5e'),
    title: 'Cricket',
    requiresTeam: true,
    playersRequired: 15
  },
  {
    _id: ObjectId('6791e008093aff50e6c5fe70'),
    title: 'BasketBall',
    requiresTeam: false
  }
]
SportData> db.sports.find()
[
  {
    _id: ObjectId('6791dfb9093aff50e6c5fe5e'),
    title: 'Cricket',
    requiresTeam: true,
    playersRequired: 15
  },
  {
    _id: ObjectId('6791e008093aff50e6c5fe70'),
    title: 'BasketBall',
    requiresTeam: false
  }
]
SportData>