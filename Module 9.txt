Please enter a MongoDB connection string (Default: mongodb://localhost/):

Current Mongosh Log ID: 6791ed7fb3fd9089953b735e
Connecting to:          mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.1.1
Using MongoDB:          7.0.4
Using Mongosh:          2.1.1
mongosh 2.3.8 is available for download: https://www.mongodb.com/try/download/shell

For mongosh info see: https://docs.mongodb.com/mongodb-shell/

------
   The server generated these startup warnings when booting
   2025-01-21T12:38:39.330+05:30: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
------

test> use users
switched to db users
users> use user
switched to db user
user> db.users.deleteOne({name: "Chris"})
{ acknowledged: true, deletedCount: 1 }
user> db.users.find()
[
  {
    _id: ObjectId('67908caf7c59ff91a9587f4a'),
    name: 'Max',
    hobbies: [
      {
        title: 'Sports',
        frequency: 3,
        highFrequency: true,
        goodFrequency: true
      },
      { title: 'Cooking', frequency: 6 }
    ],
    isSporty: true
  },
  {
    _id: ObjectId('67908caf7c59ff91a9587f4b'),
    name: 'Manuel',
    hobbies: [
      { title: 'Cooking', frequency: 6, goodFrequency: true },
      { title: 'Cars', frequency: 3 }
    ],
    phone: '0123456852',
    totalAge: 31
  },
  {
    _id: ObjectId('67908db27c59ff91a9587f4c'),
    name: 'Anna',
    hobbies: [
      { title: 'Sports', frequency: 2 },
      { title: 'Yoga', frequency: 3, goodFrequency: true }
    ],
    isSporty: true,
    totalAge: null
  },
  {
    _id: ObjectId('6791de43093aff50e6c5fdf5'),
    name: 'Maria',
    age: 29,
    hobbies: [
      { title: 'Good food', frequency: 3, goodFrequency: true },
      { title: 'Sports', frequency: 2 },
      { title: 'Yoga' },
      { frequency: 6 },
      { title: 'Sports', frequency: 2 },
      { title: 'Yoga', frequency: 2 }
    ],
    isSporty: false
  }
]
user> db.users.deleteMany({$and: [{isSporty: true}, {totalAge: {$gt: 30}}]})
{ acknowledged: true, deletedCount: 0 }
user> db.users.deleteMany({$and: [{isSporty: true}, {totalAge: {$exists: false}}]})
{ acknowledged: true, deletedCount: 1 }
user> db.users.find()
[
  {
    _id: ObjectId('67908caf7c59ff91a9587f4b'),
    name: 'Manuel',
    hobbies: [
      { title: 'Cooking', frequency: 6, goodFrequency: true },
      { title: 'Cars', frequency: 3 }
    ],
    phone: '0123456852',
    totalAge: 31
  },
  {
    _id: ObjectId('67908db27c59ff91a9587f4c'),
    name: 'Anna',
    hobbies: [
      { title: 'Sports', frequency: 2 },
      { title: 'Yoga', frequency: 3, goodFrequency: true }
    ],
    isSporty: true,
    totalAge: null
  },
  {
    _id: ObjectId('6791de43093aff50e6c5fdf5'),
    name: 'Maria',
    age: 29,
    hobbies: [
      { title: 'Good food', frequency: 3, goodFrequency: true },
      { title: 'Sports', frequency: 2 },
      { title: 'Yoga' },
      { frequency: 6 },
      { title: 'Sports', frequency: 2 },
      { title: 'Yoga', frequency: 2 }
    ],
    isSporty: false
  }
]
user> db.users.deleteMany()
MongoshInvalidInputError: [COMMON-10001] Missing required argument at position 0 (Collection.deleteMany)
user> db.users.deleteMany({})
{ acknowledged: true, deletedCount: 3 }
user> db.users.drop()
true
user> db.users.drop()
true
user> db.users.drop()
true
user> db.dropDatabase()
{ ok: 1, dropped: 'user' }
user> db.dropDatabase()
{ ok: 1, dropped: 'user' }
user>